{"version":3,"file":"nanoexpress.js","sources":["../src/helpers/gc.ts","../src/helpers/loggy.ts","../src/hooks/manager.ts","../src/constants.ts","../src/helpers/http-codes.ts","../src/helpers/http-methods.ts","../src/helpers/invalid.ts","../src/helpers/iterate-blocks.ts","../src/helpers/mime.ts","../src/helpers/slashify.ts","../src/polyfills/http-request.ts","../src/polyfills/http-response.ts","../src/utils/legacy.ts","../src/route-engine.ts","../src/router.ts","../src/app.ts","../src/exposes/websocket.ts","../src/hooks/index.ts","../src/nanoexpress.ts"],"sourcesContent":["export default function _gc(): boolean {\n  try {\n    if (global.gc) {\n      global.gc();\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import debugLog from 'debug';\n\nexport const debug = debugLog('nanoexpress');\nexport const error = debugLog('nanoexpress:error');\n\nexport const warn = debugLog('nanoexpress:warn');\n","export type Dependencies = Array<string | number | boolean>;\n\ninterface ICallbackState {\n  handler: () => never;\n  dependencies: Dependencies;\n  isEffect: boolean;\n  mounted: boolean;\n}\n\nconst lastDeps: Dependencies[] = [];\nconst callbacks: ICallbackState[] = [];\nlet hookIndex = 0;\n\nconst register =\n  (runValue = false, returnValue = false) =>\n  (\n    callback: (...args: any[]) => any,\n    dependencies: Dependencies\n  ): (() => any) | any => {\n    if (\n      !dependencies ||\n      !lastDeps[hookIndex] ||\n      !lastDeps[hookIndex].every(\n        (dep, depIndex) => dep === dependencies[depIndex]\n      )\n    ) {\n      callbacks[hookIndex] = {\n        handler: runValue ? callback() : callback,\n        dependencies,\n        isEffect: runValue && !returnValue,\n        mounted: runValue\n      };\n      lastDeps[hookIndex] = dependencies;\n    }\n\n    const _callback = callbacks[hookIndex].handler;\n    hookIndex += 1;\n\n    if (returnValue) {\n      return _callback;\n    }\n  };\nconst unregister = (): void => {\n  callbacks.forEach((callback) => {\n    if (\n      callback.isEffect &&\n      callback.mounted &&\n      typeof callback.handler === 'function'\n    ) {\n      callback.handler();\n      callback.mounted = false;\n    }\n  });\n  hookIndex = 0;\n};\n\nexport { register, unregister };\n","// Http(Request/Response)\nexport const request: unique symbol = Symbol('NanoexpressHttpRequestInstance');\nexport const response: unique symbol = Symbol(\n  'NanoexpressHttpResponseInstance'\n);\n\n// HttpRequest symbols\n\nexport const reqConfig: unique symbol = Symbol('NanoexpressHttpRequestConfig');\nexport const reqEvents: unique symbol = Symbol('NanoexpressHttpRequestEvents');\nexport const reqRequest: unique symbol = Symbol(\n  'NanoexpressHttpRequestRawInstance'\n);\nexport const reqRawResponse: unique symbol = Symbol(\n  'NanoexpressHttpResponseRawInstance'\n);\n\n// HttpResponse symbols\nexport const resHeaders: unique symbol = Symbol(\n  'NanoexpressHttpResponseHeaders'\n);\nexport const resConfig: unique symbol = Symbol('NanoexpressHttpResponseConfig');\nexport const resEvents: unique symbol = Symbol('NanoexpressHttpResponseEvents');\nexport const resAbortHandler: unique symbol = Symbol(\n  'NanoexpressHttpResponseAbortHandler'\n);\nexport const resAbortHandlerExpose: unique symbol = Symbol(\n  'NanoexpressHttpResponseAbortHandlerExpose'\n);\n\nexport const appInstance: unique symbol = Symbol('NanoexpressAppInstance');\nexport const routerInstances: unique symbol = Symbol(\n  'NanoexpressRouterInstances'\n);\nexport const wsInstances: unique symbol = Symbol(\n  'NanoexpressWebSocketInstances'\n);\n","import { STATUS_CODES } from 'http';\n\nconst codesBetween = Array.from({ length: 500 })\n  .fill(0)\n  .map((_, index) => 100 + index);\n\nconst httpCodes = codesBetween.reduce((codes, code) => {\n  const codeString = STATUS_CODES[code];\n  if (codeString) {\n    codes[code] = `${code} ${codeString}`;\n  }\n  return codes;\n}, {} as Record<number, string>);\n\nexport default httpCodes;\n","import { HttpMethod } from '../../types/nanoexpress';\n\nexport default [\n  'get',\n  'post',\n  'put',\n  'patch',\n  'del',\n  'any',\n  'head',\n  'options',\n  'trace'\n].map((m) => m.toUpperCase()) as HttpMethod[];\n","export default function invalid(message: string): void {\n  throw new Error(message);\n}\n","import {\n  BlockMode,\n  IBlock\n} from '@nanoexpress/route-syntax-parser/types/interfaces';\n\nexport default (blocks: IBlock[]): BlockMode[] => {\n  return [...new Set(blocks.map((block) => block.mode))];\n};\n","const mimes = {\n  '3gp': 'video/3gpp',\n  a: 'application/octet-stream',\n  ai: 'application/postscript',\n  aif: 'audio/x-aiff',\n  aiff: 'audio/x-aiff',\n  asc: 'application/pgp-signature',\n  asf: 'video/x-ms-asf',\n  asm: 'text/x-asm',\n  asx: 'video/x-ms-asf',\n  atom: 'application/atom+xml',\n  au: 'audio/basic',\n  avi: 'video/x-msvideo',\n  bat: 'application/x-msdownload',\n  bin: 'application/octet-stream',\n  bmp: 'image/bmp',\n  bz2: 'application/x-bzip2',\n  c: 'text/x-c',\n  cab: 'application/vnd.ms-cab-compressed',\n  cc: 'text/x-c',\n  chm: 'application/vnd.ms-htmlhelp',\n  class: 'application/octet-stream',\n  com: 'application/x-msdownload',\n  conf: 'text/plain',\n  cpp: 'text/x-c',\n  crt: 'application/x-x509-ca-cert',\n  css: 'text/css',\n  csv: 'text/csv',\n  cxx: 'text/x-c',\n  deb: 'application/x-debian-package',\n  der: 'application/x-x509-ca-cert',\n  diff: 'text/x-diff',\n  djv: 'image/vnd.djvu',\n  djvu: 'image/vnd.djvu',\n  dll: 'application/x-msdownload',\n  dmg: 'application/octet-stream',\n  doc: 'application/msword',\n  dot: 'application/msword',\n  dtd: 'application/xml-dtd',\n  dvi: 'application/x-dvi',\n  ear: 'application/java-archive',\n  eml: 'message/rfc822',\n  eps: 'application/postscript',\n  exe: 'application/x-msdownload',\n  f: 'text/x-fortran',\n  f77: 'text/x-fortran',\n  f90: 'text/x-fortran',\n  flv: 'video/x-flv',\n  for: 'text/x-fortran',\n  gem: 'application/octet-stream',\n  gemspec: 'text/x-script.ruby',\n  gif: 'image/gif',\n  gz: 'application/x-gzip',\n  h: 'text/x-c',\n  hh: 'text/x-c',\n  htm: 'text/html',\n  html: 'text/html',\n  ico: 'image/vnd.microsoft.icon',\n  ics: 'text/calendar',\n  ifb: 'text/calendar',\n  iso: 'application/octet-stream',\n  jar: 'application/java-archive',\n  java: 'text/x-java-source',\n  jnlp: 'application/x-java-jnlp-file',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  js: 'application/javascript',\n  json: 'application/json',\n  log: 'text/plain',\n  m3u: 'audio/x-mpegurl',\n  m4v: 'video/mp4',\n  man: 'text/troff',\n  mathml: 'application/mathml+xml',\n  mbox: 'application/mbox',\n  mdoc: 'text/troff',\n  me: 'text/troff',\n  mid: 'audio/midi',\n  midi: 'audio/midi',\n  mime: 'message/rfc822',\n  mjs: 'application/javascript',\n  mml: 'application/mathml+xml',\n  mng: 'video/x-mng',\n  mov: 'video/quicktime',\n  mp3: 'audio/mpeg',\n  mp4: 'video/mp4',\n  mp4v: 'video/mp4',\n  mpeg: 'video/mpeg',\n  mpg: 'video/mpeg',\n  ms: 'text/troff',\n  msi: 'application/x-msdownload',\n  odp: 'application/vnd.oasis.opendocument.presentation',\n  ods: 'application/vnd.oasis.opendocument.spreadsheet',\n  odt: 'application/vnd.oasis.opendocument.text',\n  ogg: 'application/ogg',\n  p: 'text/x-pascal',\n  pas: 'text/x-pascal',\n  pbm: 'image/x-portable-bitmap',\n  pdf: 'application/pdf',\n  pem: 'application/x-x509-ca-cert',\n  pgm: 'image/x-portable-graymap',\n  pgp: 'application/pgp-encrypted',\n  pkg: 'application/octet-stream',\n  pl: 'text/x-script.perl',\n  pm: 'text/x-script.perl-module',\n  png: 'image/png',\n  pnm: 'image/x-portable-anymap',\n  ppm: 'image/x-portable-pixmap',\n  pps: 'application/vnd.ms-powerpoint',\n  ppt: 'application/vnd.ms-powerpoint',\n  ps: 'application/postscript',\n  psd: 'image/vnd.adobe.photoshop',\n  py: 'text/x-script.python',\n  qt: 'video/quicktime',\n  ra: 'audio/x-pn-realaudio',\n  rake: 'text/x-script.ruby',\n  ram: 'audio/x-pn-realaudio',\n  rar: 'application/x-rar-compressed',\n  rb: 'text/x-script.ruby',\n  rdf: 'application/rdf+xml',\n  roff: 'text/troff',\n  rpm: 'application/x-redhat-package-manager',\n  rss: 'application/rss+xml',\n  rtf: 'application/rtf',\n  ru: 'text/x-script.ruby',\n  s: 'text/x-asm',\n  sgm: 'text/sgml',\n  sgml: 'text/sgml',\n  sh: 'application/x-sh',\n  sig: 'application/pgp-signature',\n  snd: 'audio/basic',\n  so: 'application/octet-stream',\n  svg: 'image/svg+xml',\n  svgz: 'image/svg+xml',\n  swf: 'application/x-shockwave-flash',\n  t: 'text/troff',\n  tar: 'application/x-tar',\n  tbz: 'application/x-bzip-compressed-tar',\n  tcl: 'application/x-tcl',\n  tex: 'application/x-tex',\n  texi: 'application/x-texinfo',\n  texinfo: 'application/x-texinfo',\n  text: 'text/plain',\n  tif: 'image/tiff',\n  tiff: 'image/tiff',\n  torrent: 'application/x-bittorrent',\n  tr: 'text/troff',\n  txt: 'text/plain',\n  vcf: 'text/x-vcard',\n  vcs: 'text/x-vcalendar',\n  vrml: 'model/vrml',\n  war: 'application/java-archive',\n  wav: 'audio/x-wav',\n  wma: 'audio/x-ms-wma',\n  wmv: 'video/x-ms-wmv',\n  wmx: 'video/x-ms-wmx',\n  wrl: 'model/vrml',\n  wsdl: 'application/wsdl+xml',\n  xbm: 'image/x-xbitmap',\n  xhtml: 'application/xhtml+xml',\n  xls: 'application/vnd.ms-excel',\n  xml: 'application/xml',\n  xpm: 'image/x-xpixmap',\n  xsl: 'application/xml',\n  xslt: 'application/xslt+xml',\n  yaml: 'text/yaml',\n  yml: 'text/yaml',\n  zip: 'application/zip',\n  default: 'text/html'\n};\n\ntype valueof<T> = T[keyof T];\n\nconst getMime = (path: string): valueof<typeof mimes> | undefined => {\n  const i = Number(path.lastIndexOf('.'));\n  return mimes[path.substr(i + 1).toLowerCase() as keyof typeof mimes];\n};\n\nexport { getMime, mimes };\n","export default (path: string): string =>\n  path !== '*' &&\n  path.charAt(path.length - 1) !== '/' &&\n  path.charAt(path.length - 1) !== '*' &&\n  (path.lastIndexOf('.') === -1 || path.lastIndexOf('.') < path.length - 4)\n    ? `${path}/`\n    : path;\n","/* eslint-disable max-lines, max-lines-per-function */\nimport { EventEmitter } from 'events';\nimport queryParse from 'fast-query-parse';\nimport { Readable, Writable } from 'stream';\nimport {\n  HttpRequest as uWS_HttpRequest,\n  HttpResponse as uWS_HttpResponse\n} from 'uWebSockets.js';\nimport { RequestSchema, RequestSchemaWithBody } from '../../types/find-route';\nimport { HttpMethod, INanoexpressOptions } from '../../types/nanoexpress';\nimport { reqConfig, reqEvents, reqRawResponse, reqRequest } from '../constants';\nimport { invalid } from '../helpers';\n\nexport default class HttpRequest<\n  THttpMethod = HttpMethod,\n  THttpSchema extends RequestSchemaWithBody = RequestSchema\n> {\n  protected [reqConfig]: INanoexpressOptions;\n\n  protected [reqEvents]: EventEmitter | null;\n\n  protected [reqRequest]: uWS_HttpRequest;\n\n  protected [reqRawResponse]: uWS_HttpResponse;\n\n  protected registered: boolean;\n\n  baseUrl!: string;\n\n  url!: string;\n\n  originalUrl!: string;\n\n  path!: string;\n\n  method!: THttpMethod;\n\n  headers!: THttpSchema['headers'];\n\n  params?: THttpSchema['params'];\n\n  body?: THttpSchema['body'];\n\n  query: THttpSchema['query'] = null;\n\n  stream!: Readable;\n\n  id = 0;\n\n  constructor(options: INanoexpressOptions) {\n    this[reqConfig] = options;\n\n    this.registered = false;\n\n    return this;\n  }\n\n  setRequest(req: uWS_HttpRequest, res: uWS_HttpResponse): this {\n    const options = this[reqConfig];\n\n    this[reqRequest] = req;\n    this[reqRawResponse] = res;\n\n    const query = req.getQuery();\n    const url = req.getUrl();\n\n    this.url = url;\n    this.originalUrl = this.url;\n    this.path = url;\n    this.baseUrl = '';\n\n    this.method = req.getMethod().toUpperCase() as unknown as THttpMethod;\n\n    this.headers = {};\n    req.forEach((key, value) => {\n      (this.headers as RequestSchema['headers'])[key] = value;\n    });\n\n    if (url.charAt(url.length - 1) !== '/') {\n      this.url += '/';\n      this.path += '/';\n      this.originalUrl += '/';\n    }\n\n    if (options.enableExpressCompatibility && query) {\n      this.originalUrl += `?${query}`;\n    }\n    this.query = queryParse(query);\n\n    // @ts-ignore\n    if (this.method === 'POST' || this.method === 'PUT') {\n      // Imitiate some modes\n      this.stream = new Readable({ read(): void {} });\n\n      // Protected variables\n      this[reqEvents] = null;\n      this.registered = false;\n    }\n\n    // eslint-disable-next-line security-node/detect-insecure-randomness\n    this.id = Math.round(Math.random() * 1e5);\n\n    return this;\n  }\n\n  on(event: string, listener: (...args: any[]) => void): this {\n    const { stream } = this;\n    if (stream) {\n      stream.on(event, listener);\n    }\n    return this;\n  }\n\n  emit(event: string, ...args: any[]): this {\n    const { stream } = this;\n    if (stream) {\n      stream.emit(event, ...args);\n    }\n    return this;\n  }\n\n  getHeader(key: string): string {\n    return this.headers[key];\n  }\n\n  hasHeader(key: string): boolean {\n    return !!this.headers[key];\n  }\n\n  getParameter(index: number): string {\n    return this[reqRequest].getParameter(index);\n  }\n\n  pipe(destination: Writable): Writable | void | Promise<Error> {\n    const { stream } = this;\n\n    if (stream.readableDidRead || stream.readableEnded) {\n      return invalid('Stream already used, cannot use one stream twice');\n    }\n\n    if (stream) {\n      return stream.pipe(destination);\n    }\n    return invalid(\n      'Stream was not defined, something wrong, please check your code or method is not a POST or PUT'\n    );\n  }\n\n  async *[Symbol.asyncIterator](): any {\n    const { stream } = this;\n\n    if (stream) {\n      for await (const chunk of stream) {\n        yield chunk;\n      }\n    }\n  }\n}\n","/* eslint-disable max-lines, max-lines-per-function, complexity, max-depth */\nimport { EventEmitter } from 'events';\nimport { createReadStream, ReadStream, statSync } from 'fs';\nimport uWS, { RecognizedString } from 'uWebSockets.js';\nimport {\n  BrotliCompress,\n  BrotliOptions,\n  createBrotliCompress,\n  createDeflate,\n  createGzip,\n  Deflate,\n  Gzip,\n  ZlibOptions\n} from 'zlib';\nimport { INanoexpressOptions } from '../../types/nanoexpress';\nimport {\n  request as resRequest,\n  resAbortHandler,\n  resAbortHandlerExpose,\n  resConfig,\n  resEvents,\n  resHeaders,\n  response as resResponse\n} from '../constants';\nimport { debug, getMime, httpCodes, invalid, warn } from '../helpers';\nimport HttpRequest from './http-request';\n\n/**\n * HttpResponse class\n * @constructor\n * @class\n * @namespace nanoexpress.HttpResponse\n * @memberof nanoexpress\n * @example new HttpResponse().setResponse(uWS.HttpResponse)\n */\nclass HttpResponse {\n  public [resRequest]: HttpRequest | null;\n\n  public [resResponse]: uWS.HttpResponse | null;\n\n  // Expose functionality properties\n  protected [resHeaders]: Record<string, RecognizedString | null> | null;\n\n  protected [resAbortHandler]: (() => void)[];\n\n  protected [resAbortHandlerExpose]: boolean;\n\n  protected [resConfig]: INanoexpressOptions;\n\n  protected [resEvents]: EventEmitter | null;\n\n  public done: boolean;\n\n  public aborted: boolean;\n\n  public streaming: boolean;\n\n  protected _headersSet = false;\n\n  protected registered: boolean;\n\n  protected mode: 'immediate' | 'queue' | 'cork' = 'queue';\n\n  public serialize?: (\n    data: Record<string, unknown> | string | number | boolean\n  ) => string;\n\n  public compiledResponse?: string;\n\n  public statusCode: number;\n\n  id = 0;\n\n  constructor(config: INanoexpressOptions) {\n    this[resConfig] = config;\n    this.done = false;\n    this.aborted = false;\n    this._headersSet = false;\n    this.registered = false;\n    this.streaming = false;\n    this[resEvents] = null;\n    this[resAbortHandler] = [];\n    this[resAbortHandlerExpose] = false;\n\n    this[resRequest] = null;\n    this[resResponse] = null;\n    this[resHeaders] = null;\n\n    this.mode = config.responseMode;\n\n    this.statusCode = 200;\n  }\n\n  protected registerEvents(): this {\n    const emitter = this[resEvents];\n\n    if (emitter && !this.registered) {\n      this.exposeAborted();\n\n      emitter\n        .on('pipe', (stream) => {\n          debug('stream.pipe(res)');\n\n          this.streaming = true;\n          this.stream(stream);\n        })\n        .on('data', () => {\n          debug('stream.pipe(res):data event');\n        })\n\n        .on('unpipe', () => {\n          debug('stream.unpipe(res)');\n\n          this.aborted = true;\n        })\n        .on('error', () => {\n          debug('stream.pipe(res) error');\n          this.aborted = true;\n          this.end();\n        });\n      this.registered = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * Registers event to response\n   * @param eventName Event name\n   * @param eventArgument Any argument\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.on('end', (eventArgument) => {...})\n   */\n  on(\n    eventName: string | symbol,\n    eventArgument: (eventArgument?: unknown) => void\n  ): this {\n    let emitter = this[resEvents];\n\n    if (!emitter) {\n      this[resEvents] = new EventEmitter();\n    }\n    emitter = this[resEvents] as EventEmitter;\n    emitter.on(eventName, eventArgument);\n\n    debug('res.on(%s, handler)', eventName);\n\n    this.registerEvents();\n\n    return this;\n  }\n\n  /**\n   * Registers event to response to be fired once\n   * @param eventName Event name\n   * @param eventArgument Any argument\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.once('end', (eventArgument) => {...})\n   */\n  once(\n    eventName: string | symbol,\n    eventArgument: (eventArgument?: unknown) => void\n  ): this {\n    let emitter = this[resEvents];\n\n    if (!emitter) {\n      this[resEvents] = new EventEmitter();\n    }\n    emitter = this[resEvents] as EventEmitter;\n    emitter.once(eventName, eventArgument);\n\n    debug('res.once(%s, handler)', eventName);\n\n    this.registerEvents();\n\n    return this;\n  }\n\n  /**\n   * Removes event from response\n   * @param eventName Event name\n   * @param eventArgument Any argument\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.off('end', (eventArgument) => {...})\n   */\n  off(\n    eventName: string | symbol,\n    eventArgument: (eventArgument?: unknown) => void\n  ): this {\n    let emitter = this[resEvents];\n\n    if (!emitter) {\n      return this;\n    }\n    emitter = this[resEvents] as EventEmitter;\n    emitter.off(eventName, eventArgument);\n\n    debug('res.off(%s, handler)', eventName);\n\n    this.registerEvents();\n\n    return this;\n  }\n\n  /**\n   * Removes listener from response\n   * @param eventName Event name\n   * @param eventArgument Any argument\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.removeListener('end', (eventArgument) => {...})\n   */\n  removeListener(\n    eventName: string | symbol,\n    eventArgument: (eventArgument?: unknown) => void\n  ): this {\n    let emitter = this[resEvents];\n\n    if (!emitter) {\n      return this;\n    }\n    emitter = this[resEvents] as EventEmitter;\n    emitter.removeListener(eventName, eventArgument);\n\n    debug('res.removeListener(%s, handler)', eventName);\n\n    this.registerEvents();\n\n    return this;\n  }\n\n  /**\n   * Emits event to response\n   * @param eventName Event name\n   * @param eventArgument Any argument\n   * @returns Emit response\n   * @memberof nanoexpress.HttpResponse\n   * @example res.emit('end', 1)\n   */\n  emit(eventName: string | symbol, eventArgument?: never): boolean {\n    let emitter = this[resEvents];\n\n    if (!emitter) {\n      this[resEvents] = new EventEmitter();\n    }\n    debug('res.emit(%s, argument)', eventName);\n\n    emitter = this[resEvents] as EventEmitter;\n    return emitter.emit(eventName, eventArgument);\n  }\n\n  /**\n   * Set new HttpResponse for current pool\n   * @param res Native uWS.HttpResponse instance\n   * @param req HttpResponse instance\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.setResponse(res, req)\n   */\n  setResponse(res: uWS.HttpResponse, req: HttpRequest): this {\n    this[resRequest] = req;\n    this[resResponse] = res;\n    this.done = false;\n    this.aborted = res.aborted || false;\n    this._headersSet = false;\n    this.streaming = false;\n    this.registered = false;\n    this[resEvents] = null;\n    this[resAbortHandlerExpose] = false;\n    this[resAbortHandler].length = 0;\n\n    this[resHeaders] = null;\n    this.statusCode = 200;\n\n    // eslint-disable-next-line security-node/detect-insecure-randomness\n    this.id = Math.round(Math.random() * 1e5);\n\n    return this;\n  }\n\n  // Native methods re-implementing\n  /**\n   * Ends this response by copying the contents of body.\n   * @param body Body content\n   * @param closeConnection Gives boolean to connection statement\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.end('text');\n   */\n  end(body?: uWS.RecognizedString, closeConnection?: boolean): this {\n    const { mode } = this;\n    const res = this[resResponse];\n\n    if (res && mode === 'cork') {\n      res.cork(() => {\n        this._end(body, closeConnection);\n      });\n      return this;\n    }\n    return this._end(body, closeConnection);\n  }\n\n  /**\n   * @private\n   * Ends this response by copying the contents of body.\n   * @param body Body content\n   * @param closeConnection Gives boolean to connection statement\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res._end('text');\n   */\n  protected _end(body?: uWS.RecognizedString, closeConnection?: boolean): this {\n    const {\n      mode,\n      statusCode,\n      done,\n      streaming,\n      _headersSet,\n      [resHeaders]: _headers\n    } = this;\n    const res = this[resResponse];\n\n    if (!done && res && !streaming) {\n      debug(\n        'res.end(body) called with status %d and has headers',\n        statusCode,\n        _headersSet\n      );\n\n      res.writeStatus(httpCodes[statusCode]);\n      if (mode !== 'immediate') {\n        // headers\n        if (_headersSet) {\n          for (const header in _headers) {\n            const value = _headers[header];\n            if (value) {\n              res.writeHeader(header, value);\n            }\n          }\n        }\n      }\n      res.end(body, closeConnection);\n      this.done = true;\n      this[resResponse] = null;\n    }\n    return this;\n  }\n\n  /**\n   * Sets response status\n   * @deprecated Please use `res.statusCode` instead\n   * @param code Status code\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.status(204);\n   */\n\n  status(code: number): this {\n    debug('res.status(%d)', code);\n\n    this.statusCode = code;\n\n    return this;\n  }\n\n  /**\n   * Combine of `res.status` and `res.setHeaders`\n   * @param code Status code\n   * @param headers Record object containing headers\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.writeHead(200, {'X-Header': 1234});\n   */\n  writeHead(\n    code: number | Record<string, RecognizedString>,\n    headers?: Record<string, RecognizedString>\n  ): this {\n    if (typeof code === 'object' && !headers) {\n      headers = code;\n      code = 200;\n    }\n\n    if (code !== undefined && code !== 200) {\n      this.statusCode = code as number;\n    }\n    if (headers !== undefined) {\n      this.setHeaders(headers);\n    }\n\n    return this;\n  }\n\n  /**\n   * Redirect current locate to new\n   * @param code Redirect code\n   * @param path Path to be redirected\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.redirect('/foo');\n   */\n  redirect(code: number | string, path?: string): this {\n    if (!path && typeof code === 'string') {\n      path = code;\n      code = 301;\n    }\n    if (path && path.indexOf('/') === -1) {\n      path = `/${path}`;\n    }\n\n    this.statusCode = code as number;\n    this.setHeader('Location', path as string);\n\n    return this.end();\n  }\n\n  /**\n   * Sends status with empty body\n   * @param code Status code\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.sendStatus(204);\n   */\n  sendStatus(code: number): this {\n    debug('res.sendStatus(%d)', code);\n\n    this.statusCode = code;\n    return this.end();\n  }\n\n  /**\n   * Sends this response by copying the contents of body.\n   * @param body Body content\n   * @param closeConnection Gives boolean to connection statement\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.send({status: 'success'});\n   */\n  send(\n    data: Record<string, unknown> | string | number | boolean,\n    closeConnection?: boolean\n  ): this {\n    const { done, compiledResponse } = this;\n    if (!done && this[resResponse]) {\n      if (compiledResponse) {\n        return this.end(compiledResponse, closeConnection);\n      }\n      if (this.serialize) {\n        return this.end(this.serialize(data), closeConnection);\n      }\n      if (typeof data === 'object') {\n        this.setHeader('Content-Type', 'application/json; charset=utf-8');\n        return this.end(\n          JSON.stringify(\n            data,\n            this[resConfig].json_replacer,\n            this[resConfig].json_spaces\n          ),\n          closeConnection\n        );\n      }\n\n      return this.end(data as string, closeConnection);\n    }\n    return this;\n  }\n\n  /**\n   * @deprecated Use `res.stream` instead of\n   * Streams input stream to response output\n   * @param stream Input stream\n   * @param size Stream size\n   * @param compressed Compressed status\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.pipe(readableStream)\n   * @alias res.stream(readableStream)\n   */\n  pipe(stream: ReadStream, size?: number, compressed?: boolean): this {\n    debug('res.pipe(stream, %d, %j)', size, compressed);\n\n    return this.stream(stream, size, compressed);\n  }\n\n  /**\n   * Streams input stream to response output\n   * @param stream Input stream\n   * @param size Stream size\n   * @param compressed Compressed status\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.stream(readableStream)\n   */\n  stream(stream: ReadStream, size?: number, compressed = false): this {\n    const { mode, [resRequest]: req, [resResponse]: res } = this;\n\n    if (req && (!size || Number.isNaN(size)) && req.headers['content-length']) {\n      size = +req.headers['content-length'];\n    } else if ((!size || Number.isNaN(size)) && stream.path) {\n      ({ size } = statSync(stream.path));\n    }\n\n    if (res && mode === 'cork') {\n      res.cork(() => {\n        this._stream(stream, size, compressed);\n      });\n      return this;\n    }\n\n    return this._stream(stream, size, compressed);\n  }\n\n  /**\n   * @private\n   * Streams input stream to response output\n   * @param stream Input stream\n   * @param size Stream size\n   * @param compressed Compressed status\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res._stream(readableStream)\n   */\n  protected _stream(\n    stream: ReadStream,\n    size?: number,\n    compressed = false\n  ): this {\n    if (!this.done && this[resResponse] && this[resResponse] !== null) {\n      const res = this[resResponse] as uWS.HttpResponse;\n      const config = this[resConfig];\n      const { mode, statusCode, _headersSet, [resHeaders]: _headers } = this;\n\n      this.exposeAborted();\n      let calledData = !config.enableExpressCompatibility;\n\n      if (compressed) {\n        const compressedStream = this.compressStream(stream);\n\n        if (compressedStream) {\n          stream = compressedStream as unknown as ReadStream;\n        }\n      }\n\n      const onclose = (): void => {\n        if (calledData) {\n          this.done = true;\n          this.streaming = false;\n          this.emit('close');\n        } else if (stream.path) {\n          stream.close();\n          warn(\n            'res.stream(stream) data was not called, but mimicked by [nanoexpress], performance may be dropped and even can be stuck at responses, so please use official middlewares to avoid such errors'\n          );\n          this.stream(createReadStream(stream.path), size, compressed);\n        }\n      };\n      const onfinish = (): void => {\n        if (calledData) {\n          if (typeof stream.close === 'function') {\n            stream.close();\n          } else {\n            stream.emit('close');\n          }\n        }\n        this.emit('finish');\n      };\n\n      res.writeStatus(httpCodes[statusCode]);\n      if (mode !== 'immediate') {\n        // headers\n        if (_headersSet) {\n          for (const header in _headers) {\n            const value = _headers[header];\n            if (value) {\n              res.writeHeader(header, value);\n            }\n          }\n        }\n      }\n\n      if (compressed || !size || Number.isNaN(size)) {\n        debug('res.stream:compressed(stream, %d, %j)', size, compressed);\n        stream\n          .on('data', (buffer: Buffer): void => {\n            calledData = true;\n\n            if (this.aborted || this.done) {\n              return;\n            }\n            res.write(\n              buffer.buffer.slice(\n                buffer.byteOffset,\n                buffer.byteOffset + buffer.byteLength\n              )\n            );\n          })\n          .on('close', onclose)\n          .on('finish', onfinish);\n      } else {\n        debug('res.stream:uncompressed(stream, %d, %j)', size, compressed);\n        stream.on('data', (buffer: Buffer): void => {\n          calledData = true;\n          if (this.done || this.aborted) {\n            return;\n          }\n          buffer = buffer.buffer.slice(\n            buffer.byteOffset,\n            buffer.byteOffset + buffer.byteLength\n          ) as Buffer;\n\n          const lastOffset = res.getWriteOffset();\n          const [ok, done] = res.tryEnd(buffer, size as number);\n\n          if (done) {\n            this.done = true;\n          } else if (!ok) {\n            stream.pause();\n\n            res.onWritable((offset: number): boolean => {\n              if (this.done || this.aborted) {\n                return true;\n              }\n              const [writeOk, writeDone] = res.tryEnd(\n                buffer.slice(offset - lastOffset),\n                size as number\n              );\n              if (writeDone) {\n                this.done = true;\n              } else if (writeOk) {\n                stream.resume();\n              }\n              return writeOk;\n            });\n          }\n        });\n      }\n      stream\n        .on('error', (error) => {\n          stream.destroy(error);\n          this.aborted = true;\n          this.emit('error', error as never);\n        })\n        .on('close', onclose)\n        .on('finish', onfinish);\n    }\n    return this;\n  }\n\n  /**\n   * Compress stream into compressed into\n   * @param stream Readable stream\n   * @param options One of compressions (BrotliCompress, ZlibOptions)\n   * @param priority Compression picking priority\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.compressStream(writableStream)\n   */\n  compressStream(\n    stream: ReadStream,\n    options?: BrotliOptions | ZlibOptions,\n    priority = ['gzip', 'br', 'deflate']\n  ): BrotliCompress | Gzip | Deflate | null {\n    const req = this[resRequest];\n\n    if (!req) {\n      invalid(\n        'This method requires active `HttpRequest`. Please load required middleware'\n      );\n      return null;\n    }\n    if (!req.headers) {\n      invalid(\n        'This method requires active `HttpRequest.headers`. Please load required middleware'\n      );\n      return null;\n    }\n    const contentEncoding = req.headers['content-encoding'];\n    const encoding = priority.find(\n      (currentEncoding) =>\n        contentEncoding && contentEncoding.indexOf(currentEncoding) !== -1\n    );\n\n    let compression = null;\n\n    if (encoding === 'br') {\n      compression = createBrotliCompress(options);\n    } else if (encoding === 'gzip') {\n      compression = createGzip(options);\n    } else if (encoding === 'deflare') {\n      compression = createDeflate(options);\n    }\n\n    if (compression && encoding) {\n      stream.pipe(compression);\n      this.setHeader('content-encoding', encoding);\n    }\n\n    return compression;\n  }\n\n  /**\n   * Sends file to end user with efficient stream\n   * @param path File absolute path\n   * @param lastModified Sets `Last-Modified` header to prevent infinite re-loading\n   * @param compressed Compresses file and saves bandwidth of user\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.sendFile('foo.mp4')\n   */\n  sendFile(path: string, lastModified = true, compressed = false): this {\n    const req = this[resRequest];\n    const headers = req?.headers;\n\n    const stat = statSync(path);\n    let { size } = stat;\n\n    // handling last modified\n    if (lastModified) {\n      const { mtime } = stat;\n\n      mtime.setMilliseconds(0);\n      const mtimeutc = mtime.toUTCString();\n\n      // Return 304 if last-modified\n      if (headers && headers['if-modified-since']) {\n        if (new Date(headers['if-modified-since']) >= mtime) {\n          this.statusCode = 304;\n          return this.end();\n        }\n      }\n      this.setHeader('last-modified', mtimeutc);\n    }\n    this.setHeader('content-type', getMime(path) as string);\n\n    let start: number | undefined = 0;\n    let end: number | undefined = 0;\n\n    if (headers && headers.range) {\n      [start, end] = headers.range\n        .substr(6)\n        .split('-')\n        .map((byte: string) => (byte ? parseInt(byte, 10) : undefined));\n\n      // Chrome patch for work\n      if (end === undefined) {\n        end = size - 1;\n      }\n\n      if (start !== undefined) {\n        this.statusCode = 206;\n        this.setHeader('accept-ranges', 'bytes');\n        this.setHeader('content-range', `bytes ${start}-${end}/${size}`);\n        size = end - start + 1;\n      }\n    }\n\n    // for size = 0\n    if (end < 0) {\n      end = 0;\n    }\n\n    const createStreamInstance = end\n      ? createReadStream(path, { start, end })\n      : createReadStream(path);\n\n    return this.stream(createStreamInstance, size, compressed);\n  }\n\n  /**\n   * Enters or continues chunked encoding mode. Writes part of the response. End with zero length write.\n   * @param chunk Content response chunk\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.write(Buffer.from('Hi'));\n   */\n  write(chunk: uWS.RecognizedString | ArrayBuffer): this {\n    const res = this[resResponse];\n    if (!this.done && res && !this.streaming) {\n      debug('res.write(%s)', chunk);\n      res.write(chunk);\n      return this;\n    }\n    return this;\n  }\n\n  /**\n   *\n   * Exposed methods\n   */\n  exposeAborted(): this {\n    const res = this[resResponse];\n    if (!this[resAbortHandlerExpose] && res) {\n      debug('res.onAborted is exposed');\n      res.onAborted(() => {\n        this.aborted = true;\n        warn('res.onAborted is called');\n        this[resAbortHandler].forEach((callback) => callback());\n      });\n      this[resAbortHandlerExpose] = true;\n    }\n\n    return this;\n  }\n\n  onAborted(handler: () => void): this {\n    if (this[resAbortHandlerExpose]) {\n      this[resAbortHandler].push(handler);\n    }\n\n    return this;\n  }\n\n  /**\n   * Get response header value by key\n   * @param key Header key\n   * @returns Returns value of header got by key\n   * @example res.getHeader('cookie');\n   * @memberof nanoexpress.HttpResponse\n   */\n  getHeader(key: string): RecognizedString | null {\n    const headers = this[resHeaders];\n    if (headers && headers[key]) {\n      debug(\"res.getHeader('%s')\", key);\n      return headers[key];\n    }\n    return null;\n  }\n\n  /**\n   * Checks response header value by key\n   * @param key Header key\n   * @returns Returns `true` if header exists whereas `false` in other cases\n   * @example res.hasHeader('cookie');\n   * @memberof nanoexpress.HttpResponse\n   */\n  hasHeader(key: string): boolean {\n    debug(\"res.hasHeader('%s')\", key);\n    return this.getHeader(key) !== null;\n  }\n\n  /**\n   * Set response header value by key\n   * @param key Header key\n   * @param value Header value\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.setHeader('content-type', 'application/json');\n   */\n  setHeader(key: string, value: uWS.RecognizedString): this {\n    const { mode, [resResponse]: res } = this;\n\n    debug(\"res.setHeader('%s', '%s')\", key, value);\n\n    if (res && mode === 'immediate') {\n      res.writeHeader(key, value);\n      return this;\n    }\n\n    if (!this[resHeaders]) {\n      this[resHeaders] = {};\n    }\n\n    this._headersSet = true;\n    const headers = this[resHeaders] as Record<string, typeof value>;\n    headers[key] = value;\n\n    return this;\n  }\n\n  /**\n   * Set response header value by key\n   * @param key Header key\n   * @param value Header value\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.set('content-type', 'application/json');\n   * @alias res.setHeader('content-type', 'application/json');\n   */\n  set(key: string, value: uWS.RecognizedString): this {\n    return this.setHeader(key, value);\n  }\n\n  /**\n   * Set response headers by Record dict\n   * @param headers Header key/value record dict\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.setHeaders({'content-type':'application/json'});\n   */\n  setHeaders(headers: Record<string, uWS.RecognizedString>): this {\n    const { mode, [resResponse]: res } = this;\n\n    if (res && mode === 'immediate') {\n      warn('res.setHeaders(headers) cannot be set due of immediate mode');\n      return this;\n    }\n\n    debug('res.setHeaders(headers)');\n    this._headersSet = true;\n\n    if (this[resHeaders]) {\n      Object.assign(this[resHeaders], headers);\n    } else {\n      this[resHeaders] = headers;\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove response header value by key\n   * @param key Header key\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.removeHeader('cookie');\n   */\n  removeHeader(key: string): this {\n    const { mode, [resResponse]: res } = this;\n\n    if (res && mode === 'immediate') {\n      warn(\"res.removeHeader('%s') cannot be set due of immediate mode\", key);\n      return this;\n    }\n\n    debug(\"res.removeHeader('%s')\", key);\n\n    const headers = this[resHeaders];\n    if (headers && headers[key]) {\n      headers[key] = null;\n    }\n\n    return this;\n  }\n\n  /**\n   * Set response content type\n   * @param contentType Content type\n   * @returns nanoexpress.HttpResponse\n   * @memberof nanoexpress.HttpResponse\n   * @example res.type('application/json');\n   */\n  type(contentType: string): this {\n    debug('res.type(%s)', contentType);\n    return this.setHeader('content-type', contentType);\n  }\n}\n\nexport default HttpResponse;\n","import { MiddlewareHandler } from '../../types/find-route';\nimport { HttpMethod } from '../../types/nanoexpress';\nimport { warn } from '../helpers/loggy';\nimport { HttpRequest, HttpResponse } from '../polyfills';\n\nexport type LegacyHttpHandler<T> = (\n  req: HttpRequest<T>,\n  res: HttpResponse,\n  next: (err?: Error, done?: boolean) => void\n) =>\n  | HttpResponse\n  | string\n  | Record<string, unknown>\n  | Promise<HttpResponse | Record<string, unknown> | string>;\n\nexport default (\n  middleware: LegacyHttpHandler<HttpMethod>\n): MiddlewareHandler => {\n  warn(\n    'legacy middlewares is deprecated and in future we will remove express.js middlewares support'\n  );\n  const httpHandler = function legacyMiddlewarePolyfillHandler(\n    req: HttpRequest,\n    res: HttpResponse\n  ): Promise<HttpResponse> {\n    return new Promise((resolve, reject) => {\n      middleware(req, res, (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          // @ts-ignore\n          resolve();\n        }\n      });\n    });\n  };\n  const displayName = middleware.name;\n  httpHandler.raw = middleware;\n  httpHandler.displayName = displayName;\n  return httpHandler;\n};\n","/* eslint-disable max-lines, max-lines-per-function, complexity, max-depth */\nimport analyze from '@nanoexpress/route-syntax-parser';\nimport fastDecodeURI from 'fast-decode-uri-component';\nimport { pathToRegexp } from 'path-to-regexp';\nimport {\n  HttpHandler,\n  PreparedRoute,\n  UnpreparedRoute\n} from '../types/find-route';\nimport { HttpMethod, INanoexpressOptions } from '../types/nanoexpress';\nimport { debug, invalid, iterateBlocks, slashify, _gc } from './helpers';\nimport { HttpRequest, HttpResponse } from './polyfills';\nimport legacyUtil, { LegacyHttpHandler } from './utils/legacy';\n\nexport default class RouteEngine {\n  protected options: INanoexpressOptions;\n\n  protected routes: PreparedRoute[];\n\n  public async: boolean;\n\n  public await: boolean;\n\n  public params = false;\n\n  public headers = false;\n\n  public cookies = false;\n\n  public query = false;\n\n  public body = false;\n\n  public property = false;\n\n  constructor(options: INanoexpressOptions) {\n    this.options = options;\n    this.routes = [];\n    this.async = false;\n    this.await = false;\n  }\n\n  parse(incomingRoute: UnpreparedRoute): PreparedRoute {\n    const { options: config } = this;\n\n    const route: PreparedRoute = {\n      ...incomingRoute,\n      all: false,\n      regex: false,\n      fetch_params: false,\n      async: false,\n      await: false,\n      legacy: false,\n      analyzeBlocks: []\n    };\n\n    if (typeof route.path === 'string') {\n      if (config.ignoreTrailingSlash) {\n        route.path = slashify(route.path);\n        route.originalUrl = slashify(route.originalUrl);\n      }\n\n      route.path = fastDecodeURI(route.path);\n\n      if (route.baseUrl === '*') {\n        route.all = true;\n      } else if (route.path.indexOf(':') !== -1) {\n        route.fetch_params = true;\n        route.param_keys = [];\n        route.path = pathToRegexp(route.path, route.param_keys);\n        route.regex = true;\n      } else if (route.path.indexOf('/*') !== -1) {\n        route.baseUrl = route.path.substr(0, route.path.indexOf('/*') + 1);\n        route.path = route.path.substr(route.baseUrl.length);\n        route.all = true;\n      } else if (\n        route.baseUrl.length > 1 &&\n        route.baseUrl.indexOf('/*') !== -1\n      ) {\n        route.baseUrl = route.baseUrl.substring(0, route.baseUrl.indexOf('/*'));\n        route.originalUrl = route.originalUrl.substring(\n          0,\n          route.originalUrl.indexOf('/*') + 1\n        );\n        route.all = true;\n      }\n    } else if (route.path instanceof RegExp) {\n      route.regex = true;\n    }\n    route.async = route.handler.constructor.name === 'AsyncFunction';\n    route.await = route.handler.toString().includes('await');\n    route.legacy = route.handler.toString().includes('next(');\n    route.analyzeBlocks = analyze<HttpHandler<HttpMethod, any>>(route.handler);\n    const usedBlocks = iterateBlocks(route.analyzeBlocks);\n\n    if (route.legacy) {\n      if (config.enableExpressCompatibility) {\n        route.handler = legacyUtil(\n          route.handler as LegacyHttpHandler<HttpMethod>\n        );\n        route.async = true;\n        route.await = true;\n      } else {\n        invalid(\n          'Express.js compatibility mode is disabled, please enable before using *express.js* middlewares, but take care - performance will not be same as disabled'\n        );\n      }\n    }\n\n    if (!this.params && route.fetch_params) {\n      this.params = true;\n    }\n    if (!this.async && route.async) {\n      this.async = true;\n    }\n    if (!this.await && route.await) {\n      this.await = true;\n    }\n\n    usedBlocks.forEach((blockName): void => {\n      if (blockName === 'property') {\n        //\n      } else {\n        if (!this[blockName]) {\n          this[blockName] = true;\n        }\n      }\n    });\n\n    debug(\n      'route registered [%s] baseurl(%s) path(%s) - originalurl(%s)',\n      route.method,\n      route.baseUrl,\n      route.path,\n      route.originalUrl\n    );\n\n    return route;\n  }\n\n  on(\n    method: HttpMethod,\n    path: string | RegExp | Array<string | RegExp>,\n    handler: HttpHandler<HttpMethod, any> | HttpHandler<HttpMethod, any>[],\n    baseUrl: string,\n    originalUrl: string\n  ): this {\n    if (Array.isArray(method)) {\n      method.forEach((methodId) => {\n        this.on(methodId, path, handler, baseUrl, originalUrl);\n      });\n      return this;\n    }\n    if (Array.isArray(path)) {\n      path.forEach((pathId) => {\n        this.on(method, pathId, handler, baseUrl, originalUrl);\n      });\n      return this;\n    }\n    if (Array.isArray(handler)) {\n      handler.forEach((handlerId) => {\n        this.on(method, path, handlerId, baseUrl, originalUrl);\n      });\n      return this;\n    }\n\n    this.routes.push(\n      this.parse({ method, path, baseUrl, originalUrl, handler })\n    );\n\n    _gc();\n\n    return this;\n  }\n\n  off(\n    method: HttpMethod,\n    path: string,\n    handler: HttpHandler<HttpMethod, any>,\n    baseUrl: string,\n    originalUrl: string\n  ): this {\n    const parsed = this.parse({ method, path, baseUrl, originalUrl, handler });\n\n    if (!handler) {\n      this.routes = this.routes.filter(\n        (route) =>\n          !(route.method === parsed.method && route.path === parsed.path)\n      );\n    } else {\n      this.routes = this.routes.filter(\n        (route) =>\n          !(\n            route.method === parsed.method &&\n            route.path === parsed.path &&\n            route.handler === parsed.handler\n          )\n      );\n    }\n\n    _gc();\n\n    return this;\n  }\n\n  async lookup(\n    req: HttpRequest,\n    res: HttpResponse\n  ): Promise<HttpResponse | string | void> {\n    const { routes, options } = this;\n    let response;\n\n    for (let i = 0, len = routes.length; i < len; i += 1) {\n      const route = routes[i];\n\n      // Early return for performance reason\n      if (res.done) {\n        debug('routes lookup early exit');\n        return res;\n      }\n\n      if (route.method === 'ANY' || route.method === req.method) {\n        let found = false;\n\n        if (route.all) {\n          found =\n            route.path && route.path !== '*'\n              ? req.path.includes(route.path as string)\n              : route.originalUrl === '*' ||\n                req.originalUrl.substr(route.originalUrl.length).length > 1;\n        } else if (route.regex && (route.path as RegExp).test(req.path)) {\n          found = true;\n        } else if (route.path === req.path && route.baseUrl === req.baseUrl) {\n          found = true;\n        } else if (route.originalUrl === req.originalUrl) {\n          found = true;\n        }\n\n        if (found) {\n          if (route.fetch_params && route.param_keys) {\n            const exec = (route.path as RegExp).exec(req.path);\n\n            req.params = {} as Record<string, string>;\n            for (\n              let p = 0, lenp = route.param_keys.length;\n              exec && p < lenp;\n              p += 1\n            ) {\n              const key = route.param_keys[p].name;\n              const value = exec[p + 1];\n\n              req.params[key] = value;\n            }\n          }\n\n          // Prepare url after found\n          if (\n            options.enableExpressCompatibility &&\n            route.baseUrl !== '' &&\n            route.baseUrl !== '*' &&\n            req.path.indexOf(route.baseUrl) === 0\n          ) {\n            req.baseUrl = route.baseUrl;\n            req.path = req.originalUrl.substr(req.baseUrl.length);\n            req.url = req.originalUrl.substr(req.baseUrl.length);\n          }\n\n          if (route.async || route.legacy) {\n            response = await route.handler(req, res);\n          } else {\n            response = route.handler(req, res);\n          }\n\n          if (res.streaming || res.done || response === res) {\n            debug('routes lookup was done with HttpResponse');\n            return res;\n          }\n          if (!res.streaming && !res.done && response) {\n            debug('routes lookup was done with async json result');\n            return res.send(response as string | Record<string, unknown>);\n          }\n\n          debug('routes lookup was done without any match');\n        } else {\n          debug('routes lookup was not found without any match');\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable max-lines, max-lines-per-function */\nimport { RecognizedString, WebSocketBehavior } from 'uWebSockets.js';\nimport {\n  MiddlewareHandler,\n  RequestSchema,\n  RequestSchemaWithBody,\n  RouteHandler,\n  UnpreparedRoute\n} from '../types/find-route';\nimport { HttpMethod, IWebsocketRoute } from '../types/nanoexpress';\nimport App from './app';\nimport { appInstance, routerInstances, wsInstances } from './constants';\nimport { invalid, _gc } from './helpers';\nimport RouteEngine from './route-engine';\n\nexport default class Router {\n  protected [appInstance]: App | Router;\n\n  protected _engine?: RouteEngine;\n\n  [routerInstances]: UnpreparedRoute[];\n\n  [wsInstances]: IWebsocketRoute[];\n\n  _basePath: string;\n\n  constructor() {\n    this[routerInstances] = [];\n    this[wsInstances] = [];\n    this._basePath = '';\n\n    return this;\n  }\n\n  on<T>(\n    method: HttpMethod,\n    path: string | RegExp,\n    handlers:\n      | MiddlewareHandler\n      | MiddlewareHandler[]\n      | RouteHandler<HttpMethod, T>\n      | RouteHandler<HttpMethod, T>[],\n    baseUrl: string,\n    originalUrl: string\n  ): this {\n    const { _engine } = this;\n\n    if (_engine) {\n      _engine.on(method, path, handlers, baseUrl, originalUrl);\n    } else if (Array.isArray(handlers)) {\n      handlers.forEach((handler) => {\n        this[routerInstances].push({\n          method,\n          path,\n          baseUrl,\n          handler,\n          originalUrl\n        });\n      });\n    } else {\n      this[routerInstances].push({\n        method,\n        path,\n        baseUrl,\n        handler: handlers,\n        originalUrl\n      });\n    }\n\n    return this;\n  }\n\n  use(\n    path: string | MiddlewareHandler | Router,\n    ...middlewares: Array<MiddlewareHandler | Router>\n  ): this {\n    if (typeof path === 'function' || path instanceof Router) {\n      middlewares.unshift(path);\n      path = '*';\n    }\n    if (Array.isArray(path)) {\n      if (\n        path.every(\n          (routePath) =>\n            typeof routePath === 'function' || path instanceof Router\n        )\n      ) {\n        return this.use('*', ...path);\n      }\n    }\n    middlewares.forEach((handler: Router | MiddlewareHandler) => {\n      if (handler instanceof Router) {\n        const _routers = handler[routerInstances];\n        const _ws = handler[wsInstances];\n\n        handler[appInstance] = this;\n        handler._basePath = path as string;\n\n        _routers.forEach(\n          ({ method, path: routePath, handler: routeHandler, baseUrl }) => {\n            this.on(\n              method,\n              routePath as string,\n              routeHandler,\n              path as string,\n              (path as string) + baseUrl + (routePath as string)\n            );\n          }\n        );\n        this[wsInstances].push(..._ws);\n\n        _routers.length = 0;\n        _ws.length = 0;\n      } else if (Array.isArray(handler)) {\n        this.use(path, ...handler);\n      } else {\n        this.on(\n          'ANY',\n          '*',\n          handler,\n          path as string,\n          this._basePath + (path as string)\n        );\n      }\n    });\n\n    _gc();\n\n    return this;\n  }\n\n  get<T = RequestSchema>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'GET', T>[]\n  ): this {\n    return this.on(\n      'GET',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  post<T = RequestSchemaWithBody>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'POST', T>[]\n  ): this {\n    return this.on(\n      'POST',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  put<T = RequestSchemaWithBody>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'PUT', T>[]\n  ): this {\n    return this.on(\n      'PUT',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  options<T = RequestSchema>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'OPTIONS', T>[]\n  ): this {\n    return this.on(\n      'OPTIONS',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  del<T = RequestSchema>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'DEL', T>[]\n  ): this {\n    return this.on(\n      'DEL',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  /**\n   *\n   * @param path\n   * @param handlers\n   * @alias Router.del\n   * @returns Router\n   */\n  delete<T = RequestSchema>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'DEL', T>[]\n  ): this {\n    return this.del(path, ...handlers);\n  }\n\n  /**\n   * @param path The accessible path to be called route handler\n   * @param handlers List of middlewares and/or routes\n   * @returns Router\n   */\n  all<T = RequestSchemaWithBody>(\n    path: string | RegExp,\n    ...handlers: RouteHandler<'ANY', T>[]\n  ): this {\n    return this.on(\n      'ANY',\n      path,\n      handlers as RouteHandler<HttpMethod, T>[],\n      this._basePath,\n      ''\n    );\n  }\n\n  ws(path: RecognizedString, options?: WebSocketBehavior): this {\n    const normalisedPath =\n      this._basePath === '*'\n        ? '*'\n        : path === '/'\n        ? this._basePath\n        : `${this._basePath}${path}`;\n\n    this[wsInstances].push({\n      path: normalisedPath,\n      options\n    } as IWebsocketRoute);\n\n    return this;\n  }\n\n  /**\n   * @deprecated Use `app.publish()` for safety, this method will not work anymore\n   * @param topic\n   * @param message\n   * @param isBinary\n   * @param compress\n   * @returns Status of publish\n   */\n  publish(\n    topic: RecognizedString,\n    message: RecognizedString,\n    isBinary?: boolean,\n    compress?: boolean\n  ): boolean {\n    const app = this[appInstance];\n    if (app) {\n      return app.publish(topic, message, isBinary, compress);\n    }\n    invalid(\n      'nanoexpress [Router]: Please attach to `Application` before using publish'\n    );\n    return false;\n  }\n}\n","/* eslint-disable max-lines, max-lines-per-function, complexity, max-depth */\nimport uWS, {\n  HttpRequest as uWS_HttpRequest,\n  HttpResponse as uWS_HttpResponse,\n  RecognizedString,\n  TemplatedApp,\n  us_listen_socket,\n  WebSocketBehavior\n} from 'uWebSockets.js';\nimport { HttpHandler, RequestSchema } from '../types/find-route';\nimport {\n  HttpMethod,\n  INanoexpressOptions,\n  IWebsocketRoute\n} from '../types/nanoexpress';\nimport _gc from './helpers/gc';\nimport { debug, warn } from './helpers/loggy';\nimport { unregister } from './hooks/manager';\nimport { HttpRequest, HttpResponse } from './polyfills';\nimport RouteEngine from './route-engine';\nimport RouterTemplate from './router';\n\nclass App extends RouterTemplate {\n  get https(): boolean {\n    return this._options.https !== undefined;\n  }\n\n  get _console(): Console {\n    return this._options.console || console;\n  }\n\n  get raw(): TemplatedApp {\n    return this._app;\n  }\n\n  protected _app: TemplatedApp;\n\n  protected _options: INanoexpressOptions;\n\n  protected _engine: RouteEngine;\n\n  protected _ws: IWebsocketRoute[];\n\n  protected _requestPools: HttpRequest[];\n\n  protected _responsePools: HttpResponse[];\n\n  protected _poolsSize: number;\n\n  protected time: [number, number];\n\n  protected _separateServed: boolean;\n\n  protected _ran: boolean;\n\n  protected _instance: Record<string, us_listen_socket | null>;\n\n  protected defaultRoute: HttpHandler<HttpMethod, any> | null;\n\n  protected errorRoute:\n    | ((err: Error, req: HttpRequest, res: HttpResponse) => void)\n    | null;\n\n  constructor(options: INanoexpressOptions, app: TemplatedApp) {\n    super();\n    this._options = options;\n    this._app = app;\n    this._engine = new RouteEngine(options);\n\n    this.defaultRoute = (_, res): HttpResponse => {\n      return res.status(404).send({ status: 'error', code: 404 });\n    };\n    this.errorRoute = (err, _, res): HttpResponse => {\n      return res.status(500).send({\n        status: 'error',\n        message: err.message\n      });\n    };\n\n    this._ws = [];\n    this._requestPools = [];\n    this._responsePools = [];\n    this._poolsSize = options.poolSize || 10;\n\n    this.time = process.hrtime();\n    this._separateServed = false;\n    this._ran = false;\n\n    this._instance = {};\n    return this;\n  }\n\n  setNotFoundHandler(handler: HttpHandler<HttpMethod, RequestSchema>): this {\n    this.defaultRoute = handler;\n\n    return this;\n  }\n\n  setErrorHandler(\n    handler: (err: Error, req: HttpRequest, res: HttpResponse) => void\n  ): this {\n    this.errorRoute = handler;\n\n    return this;\n  }\n\n  handleError(error: Error, req: HttpRequest, res: HttpResponse): this {\n    if (res && !res.aborted && !res.done && !res.streaming && this.errorRoute) {\n      this.errorRoute(error, req, res);\n    }\n\n    return this;\n  }\n\n  ws(path: RecognizedString, options: WebSocketBehavior): this {\n    this._app.ws(path, options);\n\n    return this;\n  }\n\n  publish(\n    topic: RecognizedString,\n    message: RecognizedString,\n    isBinary?: boolean,\n    compress?: boolean\n  ): boolean {\n    return this._app.publish(topic, message, isBinary, compress);\n  }\n\n  run(): this {\n    const {\n      _app: app,\n      _options: options,\n      _ws,\n      _requestPools,\n      _responsePools,\n      _poolsSize,\n      _engine,\n      _ran\n    } = this;\n\n    if (!_ran) {\n      const handler = async (\n        rawRes: uWS_HttpResponse,\n        rawReq: uWS_HttpRequest\n      ): Promise<uWS_HttpResponse | void> => {\n        let req: HttpRequest;\n        let res: HttpResponse;\n        let response;\n\n        if (_requestPools.length > 0) {\n          req = _requestPools.shift() as HttpRequest;\n          req.setRequest(rawReq, rawRes);\n        } else {\n          req = new HttpRequest(options);\n          req.setRequest(rawReq, rawRes);\n        }\n        if (_responsePools.length > 0) {\n          res = _responsePools.shift() as HttpResponse;\n          res.setResponse(rawRes, req);\n        } else {\n          res = new HttpResponse(options);\n          res.setResponse(rawRes, req);\n        }\n\n        if (\n          options.ignoreTrailingSlash &&\n          req.path.charAt(req.path.length - 1) !== '/' &&\n          (req.path.lastIndexOf('.') === -1 ||\n            req.path.lastIndexOf('.') < req.path.length - 4)\n        ) {\n          if (options.enableExpressCompatibility) {\n            debug(\n              'res.redirect called instead of fast quick-fix on route ending without \"/\" for express.js middlewares compatibility'\n            );\n            res.redirect(`http://${req.headers.host}${req.originalUrl}/`);\n            return rawRes;\n          }\n        }\n\n        if (req.method === 'POST' || req.method === 'PUT') {\n          res.exposeAborted();\n\n          rawRes.onData((arrayChunk: ArrayBuffer, isLast: boolean) => {\n            req.stream.push(Buffer.from(arrayChunk.slice(0)));\n\n            if (isLast) {\n              req.stream.push(null);\n            }\n          });\n        }\n\n        if (res.aborted || res.done || req.method === 'OPTIONS') {\n          debug('early returned ranning %o', {\n            aborted: res.aborted,\n            done: res.done,\n            method: req.method\n          });\n          return;\n        }\n\n        if (_engine.async && _engine.await) {\n          res.exposeAborted();\n          response = await _engine.lookup(req, res).catch((err) => {\n            this.handleError(err, req, res as HttpResponse);\n          });\n          unregister();\n          if (_requestPools.length < _poolsSize) {\n            _requestPools.push(req);\n          }\n          if (_responsePools.length < _poolsSize) {\n            _responsePools.push(res);\n          }\n          return rawRes;\n        }\n\n        await _engine.lookup(req, res).catch((err) => {\n          this.handleError(err, req, res as HttpResponse);\n        });\n        unregister();\n        if (_requestPools.length < _poolsSize) {\n          _requestPools.push(req);\n        }\n        if (_responsePools.length < _poolsSize) {\n          _responsePools.push(res);\n        }\n\n        if (\n          res &&\n          !res.done &&\n          !res.streaming &&\n          response === undefined &&\n          this.defaultRoute !== null\n        ) {\n          debug('routes lookup was not found any route, fallback to not-found');\n          const notFound = await this.defaultRoute(req, res);\n\n          if (notFound !== res) {\n            res.send(notFound as string | Record<string, unknown>);\n          }\n        }\n        return rawRes;\n      };\n\n      app.any('/*', handler);\n\n      _ws.forEach(({ path, options: wsOptions }) => {\n        app.ws(path, wsOptions);\n      });\n      // Cleanup GC\n      _ws.length = 0;\n      _gc();\n\n      this._ran = true;\n    }\n\n    return this;\n  }\n\n  listenSocket(\n    port: number,\n    host = 'localhost',\n    is_ssl: boolean,\n    handler: () => void\n  ): Promise<us_listen_socket> {\n    const { _options: options } = this;\n\n    if (\n      (port === 80 || port === 443) &&\n      this.https &&\n      options.https?.separateServer &&\n      !this._separateServed\n    ) {\n      const httpsPort =\n        typeof options.https.separateServer === 'number'\n          ? options.https.separateServer\n          : 443;\n      this._separateServed = true;\n      return Promise.all([\n        this.listenSocket(port, host, false, handler),\n        this.listenSocket(httpsPort, host, true, handler)\n      ]);\n    }\n\n    return this._appApplyListen(host, port, is_ssl, handler);\n  }\n\n  listen(\n    ...args: Array<number | string | boolean | (() => void)>\n  ): Promise<us_listen_socket> {\n    let port = 8000;\n    let host = 'localhost';\n    let ssl = false;\n    let handler: () => void = () => {};\n\n    args.forEach((listenArg): void => {\n      if (typeof +listenArg === 'number' && !Number.isNaN(+listenArg)) {\n        port = +listenArg;\n      } else if (typeof listenArg === 'function') {\n        handler = listenArg;\n      } else if (\n        typeof listenArg === 'string' &&\n        (listenArg === 'localhost' || listenArg.includes('.'))\n      ) {\n        host = listenArg;\n      } else if (listenArg === true) {\n        ssl = true;\n      }\n    });\n    this.run();\n    return this.listenSocket(port, host, ssl, handler);\n  }\n\n  close(port: number, host = 'localhost'): boolean {\n    const id = `${host}:${port}`;\n    const token = this._instance[id];\n\n    this._separateServed = false;\n    this.time[0] = 0;\n    this.time[1] = 0;\n\n    return this._close(token, id);\n  }\n\n  protected _appApplyListen(\n    host: string,\n    port: number,\n    is_ssl = false,\n    handler: () => void\n  ): Promise<us_listen_socket> {\n    const { _console, _options: options, _app: app } = this;\n    const sslString = is_ssl ? 'HTTPS ' : is_ssl === false ? 'HTTP ' : '';\n\n    return new Promise((resolve, reject): void => {\n      if (port === undefined) {\n        const _errorContext = 'error' in _console ? _console : console;\n\n        _errorContext.error('[Server]: PORT is required');\n        return undefined;\n      }\n      const id = `${host}:${port}`;\n\n      const onListenHandler = (token: us_listen_socket): void => {\n        if (token) {\n          const _debugContext = 'debug' in _console ? _console : console;\n          const end = process.hrtime(this.time);\n\n          this._instance[id] = token;\n          _debugContext.debug(\n            `[${sslString}Server]: started successfully at [${id}] in [${(\n              (Number(end[0]) * 1000 + Number(end[1])) /\n              1000000\n            ).toFixed(2)}ms] on PID[${process.pid}]`\n          );\n          _gc();\n          handler();\n          return resolve(token);\n        }\n        const _errorContext = 'error' in _console ? _console : console;\n\n        const err = new Error(\n          this.https &&\n          (!options.https ||\n            !options.https.cert_file_name ||\n            !options.https.key_file_name)\n            ? `[${sslString}Server]: SSL certificate was not defined or loaded`\n            : `[${sslString}Server]: failed to host at [${id}]`\n        );\n        _errorContext.error(err.message);\n        _gc();\n        return reject(err);\n      };\n\n      if (host && host !== 'localhost') {\n        app.listen(host, port, onListenHandler);\n      } else {\n        app.listen(port, onListenHandler);\n      }\n    });\n  }\n\n  _close(token: us_listen_socket | null, id: string): boolean {\n    const { _console } = this;\n\n    if (token) {\n      const _debugContext = 'debug' in _console ? _console : console;\n\n      uWS.us_listen_socket_close(token);\n      this._instance[id] = null;\n      _debugContext.debug('[Server]: stopped successfully');\n      _gc();\n\n      return true;\n    }\n\n    const _errorContext = 'error' in _console ? _console : console;\n\n    _errorContext.error('[Server]: Error, failed while stopping');\n    _gc();\n\n    return false;\n  }\n\n  /**\n   * @deprecated There no way to disable these methods as they are not available by default\n   */\n  disable(tag: string): this {\n    warn(\n      `[Server]: The tag [${tag}] cannot be disabled as not set, not supported and not available`\n    );\n    return this;\n  }\n\n  /**\n   * @deprecated Please use configuration at initialization such as `nanoexpress({json_spaces:2})` insteadof `app.set('json_spaces', 2)`\n   */\n  set(key: keyof INanoexpressOptions, value: string | number): this {\n    // @ts-ignore\n    this._options[key] = value;\n    return this;\n  }\n}\n\nexport default App;\n","import EventsEmitter from 'events';\nimport {\n  HttpRequest,\n  HttpResponse,\n  us_socket_context_t,\n  WebSocketBehavior\n} from 'uWebSockets.js';\nexport default function exposeWebsocket(\n  handler: (req: HttpRequest, res: HttpResponse) => void | Promise<void>,\n  options = {}\n): WebSocketBehavior {\n  if (typeof (options as WebSocketBehavior).open === 'function') {\n    return options;\n  }\n\n  return {\n    ...options,\n    open(ws): void {\n      ws.emit('connection', ws);\n    },\n    async upgrade(\n      res: HttpResponse,\n      req: HttpRequest,\n      context: us_socket_context_t\n    ): Promise<void> {\n      const secWsKey = req.getHeader('sec-websocket-key');\n      const secWsProtocol = req.getHeader('sec-websocket-protocol');\n      const secWsExtensions = req.getHeader('sec-websocket-extensions');\n\n      const events = new EventsEmitter();\n\n      res.on = events.on.bind(events);\n      res.once = events.once.bind(events);\n      res.off = events.off.bind(events);\n      res.emit = events.emit.bind(events);\n\n      let aborted = false;\n      res.onAborted(() => {\n        aborted = true;\n        events.emit('error', { aborted });\n      });\n\n      res.emit('upgrade', req, res);\n\n      try {\n        await handler(req, res);\n      } catch (error) {\n        aborted = true;\n        events.emit('error', error);\n      }\n      if (!aborted) {\n        events.emit('willUpgrade', req);\n        res.upgrade(\n          { req, ...res },\n          secWsKey,\n          secWsProtocol,\n          secWsExtensions,\n          context\n        );\n        events.emit('upgraded', req);\n      }\n    },\n    message: (ws, message, isBinary): void => {\n      ws.emit('message', message, isBinary);\n    },\n    drain: (ws): void => {\n      ws.emit('drain', ws.getBufferedAmount());\n    },\n    close: (ws, code, message): void => {\n      ws.emit('close', code, message);\n    }\n  };\n}\n","import { Dependencies, register } from './manager';\n\nexport const useCallback = register(false, true);\n\nexport const useEffect = register(true);\nexport const useMemo = register(true, true);\nexport const useState = <T>(initialValue: T): [T, (value: T) => void] => {\n  let value = useMemo(() => initialValue, []) as T;\n\n  const setValue = (newValue: T): void => {\n    value = newValue;\n  };\n\n  return [value, setValue];\n};\nexport const useRef = <T>(\n  ref: T | null = null,\n  dependencies: Dependencies\n): T => useMemo(() => ({ current: ref }), dependencies);\n","import uWS from 'uWebSockets.js';\nimport { INanoexpressOptions } from '../types/nanoexpress';\nimport App from './app';\nimport { exposeWebsocket } from './exposes/index';\nimport { useCallback, useEffect, useMemo, useRef, useState } from './hooks';\nimport Router from './router';\n\n/**\n * Instance initializer for nanoexpress\n * @param options Instance options\n * @param options.enableExpressCompatibility Sets polyfill status\n * @param options.ignoreTrailingSlash Normalizes trailing slash on routes\n * @returns\n */\nconst nanoexpress = (\n  options: INanoexpressOptions = {\n    ignoreTrailingSlash: true,\n    enableExpressCompatibility: false,\n    responseMode: 'cork'\n  }\n): App => {\n  let app;\n\n  if (options.https) {\n    app = uWS.SSLApp(options.https);\n  } else {\n    app = uWS.App(options.http);\n  }\n\n  return new App(options, app);\n};\n\nnanoexpress.Router = Router;\nnanoexpress.App = App;\n\n// Add exposes\nnanoexpress.exposeWebsocket = exposeWebsocket;\n\nexport {\n  nanoexpress as default,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n};\n"],"names":["resRequest","resResponse","RouterTemplate"],"mappings":"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"}